
Devloper:
=========
UI:
 HTML:
 
 Angular:

 
TECHNOLOGY AND FRAMWORK:
========================
JAVA:


DS:


SPRING:

SRING BOOT:

MS:




Devops:
========

  
  AWS:
  ====

    Project: 

    1) We have created our custom VPC i.e webshopify-vpc 10.0.0.0/16
    2) We have created public subnet and private subnet in region-1 i.e. ap-south-1a
    3) We have created public subnet and private subnet in regino-2 i.e. ap-south-1b

     We have taken the RDS in private subnet and application in public subnet and tested the connectivity from application to RDS in private subnet.

     We have taken the web-server i.e. apache2 in private subnets and attached the NAT Gateway to the private subnet,Access the private subnet machine from public subnet machine and configured the apache2 web server.


     We have Created the ALB and created the two machine in public subnet installed with apache2 server and accessed teh apache2 server via ALB.

     We have created the ALB and created the two machines in private subnet, installed with apache2 server and accessed the apache2 server via ALB

     We have created the NLB and created the two machines in public subnet,installed with apache2 server and accessed the apache2 server via NLB.

     we have created the NLB and created the two machines in private subnet, installed with apache2 server and accessed the apache2 server via ALB.

     Route53:

     purchesed a domain called webshopify.
  
     created hosted zone, it will gives us the records NS and SOA.
     Let configure the Route53 NS in godday.

     AWS Cirtificate Manager and get the public cirtificate.Configure the domain at route 53 for the LB with the https. Test the application now on the domain not LB DNS lide https://webshopify.com




     All Project Catagroy:
     =======================

     Technology Project(JAVA or Angular or AWS or DevOps)
       --> Basic CURD Operation (All Topic Integration)
       --> Angular/React (All Topic Integration)
       --> sample AWS project (All Topic Integration)
       --> Sample integraion between tools (All Topic Integration)

     Developer : UI + Server + DB + MS + Kafka + Swagger + Docker 
     --> More Integration[(Ang + Spring Rest + DB),(Ang + MS + DB),(Ang(Docker) + MS(Docker) + DB(Docker)),(Ang(minikube) + MS(minikube) + DB(minikube))]

     DevOps : OS + AWS + CI/CD(GIT/MAVAN/SONARQUBE/JACCO/JUNIT/JFROG/JENKINS/ANSIBLE/DOCKER/KUBERNATE/ELK/GAFANA)
     ---> More intergration [AWS:[(VPC{subnet(private/public),Routing,IGW},SG,IAM,Route53,EC2,LB,RDS,S3),(Narsi-Production-Env)],DevOps:[(GIT,Jenkins,Tomcat),(GIT,Jenkins(Master/slave),Tomcat),(Linux,AWS,GIT,Jenkins(Master/slave),Tomcat(Docker)),(Linux,AWS,GIT,Jenkins(Master/slave),Tomcat(Docker),DB(Docker)),(Linux,AWS,GIT,Jenkins(Master/slave),Tomcat(k8),DB(k8)),(Linux,AWS,GIT,Jenkins(Master/slave),Ansible(M/L),Tomcat(Docker),DB(Docker)),(Linux,AWS,GIT,Jenkins(Master/slave),Ansible(M/L),Tomcat(k8),DB(k8)),(Linux,AWS,GIT,Jenkins(M/S),JACCO,JUNIT,JFROG,SonarQube,Ansible,Docker,K8(M/S)(Tomcat),ELK,Grafana)]]
     
     Architect : Developer(UI + Server + DB+ MS + Kafka + Swagger + Docker) +  DevOps (OS + AWS + CI/CD(GIT/SONARQUBE/JACCO/JUNIT/JFROGGR/JENKINS/ANSIBLE/DOCKER/KUBERNATE/ELK/GAFANA)

     ---> Developer Integration + DevOps Integration + Tools(IDE)

     --->   Ashok + Narsi DevOps
    
      [--> One Complex Project for our self where we break the module for explnation
          in Project and Architect sceniero.]


     
     RealTime Developer: INFRA(KEEP IN MIND) + Developer(UI + Server + DB + MS + Kafka + Swagger + DockerB) + Basic AWS + Basic Linux +
                          Mointiring + Business Process(Documentation+JIRA+Agile) + Tools
     --> Some intergration project
     --> Then RealTime                     
     
     RealTime DevOps:  INFRA (KEEP IN MIND) +  DevOps (OS + AWS + CI/CD(GIT/SONARQUBE/JACCO/JUNIT/JFROG/JENKINS/ANSIBLE/DOCKER/KUBERNATE/ELK/GAFANA) + Mointiring + Business Process(Documentation+JIRA+Agile) + Cloud depth + OS Depth +  Tools
     --> Some intergration project
     --> Then RealTime     
     
     RealTime Archtiect : INFRA + Developer(UI + Server + DB) +  DevOps (OS + AWS + CI/CD(GIT/SONARQUBE/JACCO/JUNIT/JFROGGR/JENKINS/ANSIBLE/DOCKER/KUBERNATE/ELK/GAFANA) + Mointiring + Business Process(Documentation+JIRA+Agile) +  Tools
     --> Some intergration project
     --> Then RealTime     

    


